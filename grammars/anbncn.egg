# Matches the a^n b^n c^n (n >= 1) grammar which can't be matched by a CFG
#
# Author: Aaron Moss 
#   (adapted from Bryan Ford's "Packrat Parsing: a Practical Linear-Time Algorithm with Backtracking")

G = &(A 'c') 'a'+ B
A = 'a' A 'b' | "ab"
B = 'b' B 'c' | "bc"

{%
#include <iostream>
#include <sstream>

/**
 * Test harness for anbncn grammar.
 * @author Aaron Moss
 */
int main(int argc, char** argv) {
	using namespace std;
	
	string s;
	while ( getline(cin, s) ) {
		stringstream ss(s);
		parse::state ps(ss);
		cout << "`" << s << "' " << (anbncn::G(ps) ? "MATCHES" : "DOESN'T MATCH") << endl;
	}
}
%}
