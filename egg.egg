# Egg grammar for Egg grammars.
#
# Author: Aaron Moss

{%
#include <string>

#include "ast.hpp"
%}

grammar =		_ out_action? rule+ out_action? end_of_file

out_action =	OUT_BEGIN < ( !OUT_END . )* > OUT_END _

rule =			identifier ( BIND type_id )? EQUAL choice

identifier =	< [A-Za-z_][A-Za-z_0-9]* > _

type_id =		< identifier ( "::" _ type_id )* 
					( '<' _ type_id ( ',' _ type_id )* '>' _ )? >

choice =		sequence ( PIPE sequence )*

sequence =		( expression | action )+

expression =	( AND | NOT )? primary ( OPT | STAR | PLUS )? _

primary =		identifier ( BIND identifier )? !EQUAL
				| OPEN choice CLOSE
				| char_literal
				| str_literal
				| char_class
				| ANY
				| EMPTY
				| BEGIN sequence END

action =		'{' < ( action | !'}' . )* > '}' _

char_literal =	'\'' < character > '\'' _

str_literal =	'\"' < character* > '\"' _

char_class =	'[' < ( !']' char_range )* > ']' _

char_range =	character '-' character 
				| character

character =		'\\' [nrt\'\"\\]
				| ![\'\"\\] .

OUT_BEGIN =		"{%"
OUT_END =		"%}"
BIND =			':' _
EQUAL =			'=' _
PIPE =			'|' _
AND =			'&' _
NOT =			'!' _
OPT =			'?' _
STAR =			'*' _
PLUS =			'+' _
OPEN =			'(' _
CLOSE =			')' _
ANY =			'.' _
EMPTY =			';' _
BEGIN =			'<' _
END =			'>' _

_ =		 		( space | comment )*
space =			' ' | '\t' | end_of_line
comment =		'#' ( !end_of_line . )* end_of_line
end_of_line = 	"\r\n" | '\n' | '\r'
end_of_file = 	!.

