Document       = prolog Element COMMENT_S EOT
prolog 	       = (XMLDecl ^| ;) COMMENT_S
XMLDecl 	   = "<?xml" VersionInfo (EncodingDecl ^| ;) (S ^| ;) "?>"
VersionInfo    = S "version" Eq ("\'" VersionNum "\'" ^| "\"" VersionNum "\"" )
VersionNum 	   = ([a-zA-Z0-9_.:] ^| "-") (VersionNum ^| ;)
EncodingDecl   = S "encoding" Eq ("\'" EncName "\'" ^| "\"" EncName "\"" )
EncName 	   = [A-Za-z] EncNameR
EncNameR       = ([A-Za-z0-9._] ^| "-") EncNameR ^| ;
COMMENT_S      = (COMMENT ^| S) COMMENT_S ^| ;

ENTITY_REF     = "&" NAME ";"
CHAR_REF 	   = "&#x" HEXP ";" ^| "&#" DECP ";"
HEXP           = [0-9a-fA-F] (HEXP ^| ;)
DECP           = [0-9] (DECP ^| ;)
REFERENCE 	   = ENTITY_REF ^| CHAR_REF

Attribute      = NAME (S ^| ;) "=" (S ^| ;) ATT_VALUE
Attributes     = S Attribute Attributes ^| ;
Element        = "<" NAME Attributes (S ^| ;)
                 ( ">" Content  "</" NAME (S ^| ;) ">" ^| "/>" )

CHAR_DATA 	   = ![<&] . (CHAR_DATA ^| ;)

Content        = (COMMENT ^| Element ^| REFERENCE ^| CHAR_DATA) Content ^| ;

NAME           = [a-zA-Z_:] NAMER
NAMER          = ([a-zA-Z0-9._:] ^| "-") NAMER ^| ;
ATT_VALUE 	   = "\"" ATT_VALUE1R ^| "\'" ATT_VALUE2R
ATT_VALUE1R    = "\"" | (![<&] . ^| REFERENCE) ATT_VALUE1R
ATT_VALUE2R    = "\'" | (![<&] . ^| REFERENCE) ATT_VALUE2R

COMMENT 	   = "<!--" COMMENTR ">"
COMMENTR       = "--" | . COMMENTR
S              = [ \t\r\n]+
Eq             = (S ^| ;) "=" (S ^| ;)
EOT            = !.
